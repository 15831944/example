# diff

比较文件的差异。diff 以逐行的方式，比较文本文件的异同处。所以如果比较目录，则 diff 会比
较两个目录中相同文件名的文件。

```shell
diff —Nuar test.php test2.php
```

## 参数

```txt
参 数：
-<行数> 指定要显示多少行的文本。此参数必须与-c 或-u 参数一并使用。
-a 或--text diff 预设只会逐行比较文本文件。
-b 或--ignore-space-change 不检查空格字符的不同。
-B 或--ignore-blank-lines 不检查空白行。
-c 显示全部内文，并标出不同之处。
-C<行数>或--context<行数> 与执行"-c-<行数>"指令相同。
-d 或--minimal 使用不同的演算法，以较小的单位来做比较。
-D<巨集名称>或 ifdef<巨集名称> 此参数的输出格式可用于前置处理器巨集。
-e 或--ed 此参数的输出格式可用于 ed 的 script 文件。
-f 或-forward-ed 输出的格式类似 ed 的 script 文件，但按照原来文件的顺序来显示不同
处。
-H 或--speed-large-files 比较大文件时，可加快速度。
-l<字符或字符串>或--ignore-matching-lines<字符或字符串> 若两个文件在某几行有所
不同，而这几行同时都包含了选项中指定的字符或字符串，则不显示这两个文件的差异。
-i 或--ignore-case 不检查大小写的不同。
-l 或--paginate 将结果交由 pr 程序来分页。
-n 或--rcs 将比较结果以 RCS 的格式来显示。
-N 或--new-file 在比较目录时，若文件 A 仅出现在某个目录中，预设会显示：
Only in 目录：文件 A 若使用-N 参数，则 diff 会将文件 A 与一个空白的文件比较。
-p 若比较的文件为 C 语言的程序码文件时，显示差异所在的函数名称。
-P 或--unidirectional-new-file 与-N 类似，但只有当第二个目录包含了一个第一个目录所没有的文件时，才会将这个文件与空白的文件做比较。
-q 或--brief 仅显示有无差异，不显示详细的信息。
-r 或--recursive 比较子目录中的文件。
-s 或--report-identical-files 若没有发现任何差异，仍然显示信息。
-S<文件>或--starting-file<文件> 在比较目录时，从指定的文件开始比较。
-t 或--expand-tabs 在输出时，将 tab 字符展开。
-T 或--initial-tab 在每行前面加上 tab 字符以便对齐。
-u,-U<列数>或--unified=<列数> 以合并的方式来显示文件内容的不同。
-v 或--version 显示版本信息。
-w 或--ignore-all-space 忽略全部的空格字符。
-W<宽度>或--width<宽度> 在使用-y 参数时，指定栏宽。
-x<文件名或目录>或--exclude<文件名或目录> 不比较选项中所指定的文件或目录。
-X<文件>或--exclude-from<文件> 您可以将文件或目录类型存成文本文件，然后在=<文件>
中指定此文本文件。
-y 或--side-by-side 以并列的方式显示文件的异同之处。
--help 显示帮助。
--left-column 在使用-y 参数时，若两个文件某一行内容相同，则仅在左侧的栏位显示该
行内容。
--suppress-common-lines 在使用-y 参数时，仅显示不同之处。
```

## patch 打补丁

生成patch
```shell
diff —Nuar linux-3.0 linux-3.0-changed > linux-3.0-patch
```

保存patch后，每次只需使用如下命令，就能给文件打上补丁 :

```shell
patch -p0 <linux-3.0-patch
```

```shell
patch -p1 <../linux-3.0-patch
```

参数：
```text
-b或--backup 　备份每一个原始文件。
-B<备份字首字符串>或--prefix=<备份字首字符串> 　设置文件备份时，附加在文件名称前面的字首字符串，该字符串可以是路径名称。
-c或--context 　把修补数据解译成关联性的差异。
-d<工作目录>或--directory=<工作目录> 　设置工作目录。
-D<标示符号>或--ifdef=<标示符号> 　用指定的符号把改变的地方标示出来。
-e或--ed 　把修补数据解译成ed指令可用的叙述文件。
-E或--remove-empty-files 　若修补过后输出的文件其内容是一片空白，则移除该文件。
-f或--force 　此参数的效果和指定-t参数类似，但会假设修补数据的版本为新　版本。
-F<监别列数>或--fuzz<监别列数> 　设置监别列数的最大值。
-g<控制数值>或--get=<控制数值> 　设置以RSC或SCCS控制修补作业。
-i<修补文件>或--input=<修补文件> 　读取指定的修补问家你。
-l或--ignore-whitespace 　忽略修补数据与输入数据的跳格，空格字符。
-n或--normal 　把修补数据解译成一般性的差异。
-N或--forward 　忽略修补的数据较原始文件的版本更旧，或该版本的修补数据已使　用过。
-o<输出文件>或--output=<输出文件> 　设置输出文件的名称，修补过的文件会以该名称存放。
-p<剥离层级>或--strip=<剥离层级> 　设置欲剥离几层路径名称。
-f<拒绝文件>或--reject-file=<拒绝文件> 　设置保存拒绝修补相关信息的文件名称，预设的文件名称为.rej。
-R或--reverse 　假设修补数据是由新旧文件交换位置而产生。
-s或--quiet或--silent 　不显示指令执行过程，除非发生错误。
-t或--batch 　自动略过错误，不询问任何问题。
-T或--set-time 　此参数的效果和指定-Z参数类似，但以本地时间为主。
-u或--unified 　把修补数据解译成一致化的差异。
-v或--version 　显示版本信息。
-V<备份方式>或--version-control=<备份方式> 　用-b参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，这个字符串不仅可用-z参数变更，当使用-V参数指定不同备份方式时，也会产生不同字尾的备份字符串。
-Y<备份字首字符串>或--basename-prefix=--<备份字首字符串> 　设置文件备份时，附加在文件基本名称开头的字首字符串。
-z<备份字尾字符串>或--suffix=<备份字尾字符串> 　此参数的效果和指定-B参数类似，差别在于修补作业使用的路径与文件名若为src/linux/fs/super.c，加上backup/字符串后，文件super.c会备份于/src/linux/fs/backup目录里。
-Z或--set-utc 　把修补过的文件更改，存取时间设为UTC。
--backup-if-mismatch 　在修补数据不完全吻合，且没有刻意指定要备份文件时，才备份文件。
--binary 　以二进制模式读写数据，而不通过标准输出设备。
--help 　在线帮助。
--nobackup-if-mismatch 　在修补数据不完全吻合，且没有刻意指定要备份文件时，不要备份文件。
--verbose 　详细显示指令的执行过程。 
```

## diffstat(differential status)

根据 diff 的比较结果，显示统计数字。

```text
参 数：
-n<文件名长度> 指定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名。
-p<文件名长度> 与-n 参数相同，但此处的<文件名长度>包括了文件的路径。
-w 指定输出时栏位的宽度。
-V 显示版本信息。
```